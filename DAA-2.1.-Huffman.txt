import java.util.PriorityQueue;
import java.util.Scanner;

class HuffmanNode {
    char character;
    int frequency;
    HuffmanNode left, right;
}

public class Huffman {

    public static HuffmanNode createNode(char character, int frequency, HuffmanNode left, HuffmanNode right) {
        HuffmanNode node = new HuffmanNode();
        node.character = character;
        node.frequency = frequency;
        node.left = left;
        node.right = right;
        return node;
    }

    public static void printCode(HuffmanNode root, String code) {
        if (root.left == null && root.right == null && Character.isLetter(root.character)) {
            System.out.println(root.character + ": " + code);
            return;
        }
        printCode(root.left, code + "0");
        printCode(root.right, code + "1");
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        PriorityQueue<HuffmanNode> queue = new PriorityQueue<>((x, y) -> x.frequency - y.frequency);

        System.out.println("Enter total characters: ");
        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            System.out.println("Enter character #" + (i + 1) + ": ");
            char character = sc.next().charAt(0);
            System.out.println("Enter frequency of " + character + ": ");
            int frequency = sc.nextInt();

            queue.add(createNode(character, frequency, null, null));
        }

        // Close the scanner after all input is completed
        sc.close();

        while (queue.size() > 1) {
            HuffmanNode left = queue.poll();
            HuffmanNode right = queue.poll();
            queue.add(createNode('-', left.frequency + right.frequency, left, right));
        }

        HuffmanNode root = queue.poll();
        System.out.println("Huffman Codes: ");
        printCode(root, "");
    }
}
